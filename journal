#!/bin/bash
port=2826

############################################################
# Print Banner.                                            #
############################################################
Banner()
{
    clear
    banner="$(ls -1 ./banner/*.sh | shuf | head -1)"
    eval "$banner"
}

############################################################
# Help                                                     #
############################################################
Help()
{
   # Display Help
   echo "journalNet Client Options:"
   echo
   echo "-B     Show random ASCII Banner from banner folder."
   echo "-b     Print the addresses in bookmarks.txt file."
   echo "-m     Write a message in the Guestbook."
   echo "-g     Show the Guestbook."
   echo "-h     Print this Help."
   echo
   echo "Info: You can read journals with netcat:"
   echo "echo \"username\" | nc 127.0.0.1 2826"
}

usage()
{
    echo "JournalNet"
    echo "Usage: $(basename $0) user@host.example"
    echo "OR $(basename $0) -h for help"
    exit 0
}

############################################################
# Bookmarks                                                #
############################################################
Bookmarks()
{
   # Display Bookmarks
   echo "Bookmark List"
   readarray -t Bookmarks < bookmarks.txt

    PS3='Please enter your choice or 0 to exit: '
    select selection in "${Bookmarks[@]}"; do
    if [[ $REPLY == "0" ]]; then
        echo -e '\033[1;30mHasta la vista, Baby!\033[0m' >&2
        exit
    else
        # modify the way the program is called
        if [[ -e /usr/bin/journal ]]; then
            journal $selection
        else
            ./journal $selection
        fi
        break
    fi
done
}

############################################################
# Message                                                  #
############################################################
Message()
{
read -p "Enter your nickname: " mnickname
read -p "Enter your mail/journal/socialnet: " mcontact
read -p "Enter your message: " mmessage
if [[ -z "$mnickname" || -z "$mmessage" ]]; then
    echo "Either you have not entered your nickname, or you have not entered the message."
    exit 1
else
read -p "Send it (y/n)? " choice
echo
fi
case "$choice" in 
  y|Y ) ;;
  n|N ) exit;;
  * ) echo "Error: Invalid option.";;
esac
}

############################################################
# Guestbook                                                #
############################################################
Guestbook()
{
guestbook=$guestbook
}

############################################################
# Process the input options. Add options as needed.        #
############################################################
################################
# Get the options
while getopts ":Bhbmg" option; do
   case $option in
      B) # Enable Banner
	     Banner
         continue;;
      h) # Display Help
         Help
         exit;;
      b) # Display Bookmarks
         Bookmarks
         exit;;
      m) # Leave a Message
         Message
         continue;;
      g) # Display Guestbook.
         Guestbook
         continue;;
     \?) # Invalid option
         echo "Error: Invalid option."
         exit;;
   esac
done

############################################################
# Main program                                             #
############################################################

# Null?
[[ -z "$@" ]] && usage

# Arg is valid? user@example.com?
re='[A-Za-z0-9]+@[A-Za-z0-9.]+'
! [[ "$@" =~ $re ]] && usage

############################################################
# OK START HERE.
############################################################

# Take user and host
user="$(echo "$@" | cut -d ' ' -f 2| cut -d @ -f 1)"
host="$(echo "$@" | cut -d @ -f 2)"

# OPEN SOCKET.
exec 3<>/dev/tcp/$host/$port
echo "$user" >&3
echo "$mnickname" >&3
echo "$mmessage" >&3
echo "$mcontact" >&3
echo "$guestbook" >&3
#To test return from cut in the "$@" variable.
#echo "$user"
cat <&3
